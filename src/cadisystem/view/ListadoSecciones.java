/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cadisystem.view;

import cadisystem.dto.seccion.Seccion;
import cadisystem.model.DAO.SeccionDAO;
import cadisystem.model.dto.estudiante.Estudiante;
import cadisystem.model.implement.SeccionImp;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author carlos
 */
public class ListadoSecciones extends javax.swing.JDialog {

    Vector<Seccion> LSecciones = new Vector();
    Vector<Seccion>  listAux = new Vector();
    Integer contador = 0;
    
    public ListadoSecciones(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        cargarSecciones();
        cargarTabla(LSecciones);
        ListSelectionModel modelo = tableSecciones.getSelectionModel();
//        modelo.addListSelectionListener(new ListSelectionListener(){
//
//            @Override
//            public void valueChanged(ListSelectionEvent e) {
//
//                if(!modelo.isSelectionEmpty()){
//                    Integer selectedRow = modelo.getMinSelectionIndex();
//                    JOptionPane.showMessageDialog(null,"Sleccionado: "+selectedRow);
//                            
//                }
//            
//            }
//            
//        });
        tableSecciones.addMouseListener(new MouseAdapter() {
    @Override
    public void mouseClicked(final MouseEvent e) {
        if (e.getClickCount() == 2) {
            final JTable target = (JTable)e.getSource();
            final int row = target.getSelectedRow();
            final int column = target.getSelectedColumn();
            // Cast to ur Object type
            final Integer cell = (Integer)target.getValueAt(row,0);
            consultarSeccion cs = new consultarSeccion(null,true,cell);
            cs.setVisible(true);
        }
    }
});
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblFiltrarPor = new javax.swing.JLabel();
        cmbFiltro = new javax.swing.JComboBox();
        lblBusqueda = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSecciones = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        btnRestablecer = new javax.swing.JButton();
        btnGenerarreporte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo-cadif1.jpg"))); // NOI18N
        jLabel1.setText("                   Listado de Secciones");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(19, 19, 19))
        );

        lblFiltrarPor.setText("Filtrar por:");

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Numero", "Curso", "Asesor", "Estado" }));

        lblBusqueda.setText("Busqueda:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tableSecciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NÃºmero", "Curso", "Asesor", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSecciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSeccionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableSecciones);
        if (tableSecciones.getColumnModel().getColumnCount() > 0) {
            tableSecciones.getColumnModel().getColumn(0).setResizable(false);
            tableSecciones.getColumnModel().getColumn(1).setResizable(false);
            tableSecciones.getColumnModel().getColumn(2).setResizable(false);
            tableSecciones.getColumnModel().getColumn(3).setResizable(false);
        }

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnRestablecer.setText("Restablecer");
        btnRestablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestablecerActionPerformed(evt);
            }
        });

        btnGenerarreporte.setText("Generar Reporte");
        btnGenerarreporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarreporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFiltrarPor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblBusqueda)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(btnGenerarreporte)
                        .addGap(18, 18, 18)
                        .addComponent(btnRestablecer)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiltrarPor)
                    .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBusqueda)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(btnRestablecer)
                    .addComponent(btnGenerarreporte))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableSeccionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSeccionesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableSeccionesMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
  
        if (cmbFiltro.getSelectedItem().equals("Numero")) {
            this.busquedaPorNumero(LSecciones,listAux);

        } else if (cmbFiltro.getSelectedItem().equals("Curso")) {
            this.busquedaPorCurso(LSecciones, listAux);

        } else if (cmbFiltro.getSelectedItem().equals("Estado")) {
            this.busquedaPorEstado(this.LSecciones, listAux);

        } else if (cmbFiltro.getSelectedItem().equals("Asesor")) {
            this.busquedaPorAsesor(this.LSecciones, listAux);

        } 
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnRestablecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestablecerActionPerformed
        btnGenerarreporte.setVisible(true);
        this.cargarTabla(LSecciones);
        txtBusqueda.setText("");
         cmbFiltro.setSelectedIndex(0);
    }//GEN-LAST:event_btnRestablecerActionPerformed

    private void btnGenerarreporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarreporteActionPerformed
      
        JasperReport jr = null;
        String archivo = "C:\\Users\\carlos\\Documents\\NetBeansProjects\\Librerias\\cadisystem\\src\\cadisystem\\report\\ReporteSecciones.jasper";
               
            Map params = new HashMap<String, String>();
          
          //  params.put("usuarios",listAux);
             JRDataSource jrdt = new JRBeanCollectionDataSource(listAux);
            try {
                jr = (JasperReport) JRLoader.loadObjectFromFile(archivo);
            } catch (JRException ex) {
                Logger.getLogger(ListadoUsuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
            JasperPrint jp = null;
            try {
                jp = JasperFillManager.fillReport(jr,params,jrdt);
            } catch (JRException ex) {
                Logger.getLogger(ListadoUsuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
            JasperViewer jv = new JasperViewer(jp,false);
            this.setModal(false);
           this.dispose();
            jv.setVisible(true);
            
            jv.setTitle("Reporte de Secciones");
         
    }//GEN-LAST:event_btnGenerarreporteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListadoSecciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListadoSecciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListadoSecciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListadoSecciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListadoSecciones dialog = new ListadoSecciones(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerarreporte;
    private javax.swing.JButton btnRestablecer;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cmbFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBusqueda;
    private javax.swing.JLabel lblFiltrarPor;
    private javax.swing.JTable tableSecciones;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables

    public void cargarTabla(List<Seccion> LSeccion) {

        this.limpiarTabla();
        DefaultTableModel m = (DefaultTableModel) tableSecciones.getModel();
        m.setNumRows(0);

        for (int i = 0; i < LSeccion.size(); i++) {
            Vector fila = new Vector();
            fila.add(LSeccion.get(i).getIdSeccion());
            fila.add(LSeccion.get(i).getCurso().getNombre());
            fila.add(LSeccion.get(i).getAsesor().nombreCompleto());
            fila.add(LSeccion.get(i).getEstado().getNombre());
            m.addRow(fila);
        }
        if(LSeccion.isEmpty()){
            btnGenerarreporte.setVisible(false);
        }

    }

    private void limpiarTabla() {

    tableSecciones.removeAll();
    
    }
    public void cargarSecciones(){
        
        SeccionDAO secciondao = new SeccionImp();
        try {
            LSecciones = secciondao.listar();
          
        } catch (Exception ex) {
            Logger.getLogger(ListadoSecciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 public void mouseClicked(MouseEvent e) {
     
      if (e.getClickCount() == 2) {
         JTable target = (JTable)e.getSource();
         int row = target.getSelectedRow();
         int column = target.getSelectedColumn();
         // do some action
         Integer valor = (Integer)  tableSecciones.getModel().getValueAt(row, 1);
         System.out.println(valor);
     
      }
 }
 
     public void busquedaPorNumero(Vector<Seccion> listEs, Vector<Seccion> listAux) {
         cargarSecciones();
     listAux.removeAllElements();
         Integer busqueda;
         if(txtBusqueda.getText().contains("0") ||
            txtBusqueda.getText().contains("1") ||
            txtBusqueda.getText().contains("2") ||
            txtBusqueda.getText().contains("3") ||
            txtBusqueda.getText().contains("4") ||
            txtBusqueda.getText().contains("5") ||
            txtBusqueda.getText().contains("6") ||
            txtBusqueda.getText().contains("7") ||
            txtBusqueda.getText().contains("8") ||
            txtBusqueda.getText().contains("9")){
             
             busqueda = Integer.valueOf(txtBusqueda.getText());
         }
         else{
             busqueda = -1;
         }
       
       
        for (Seccion secc :listEs) {

            if (Objects.equals(busqueda, secc.getIdSeccion()))
                    {
                listAux.add(secc);
            }

        }
        this.cargarTabla(listAux);

    }

    public void busquedaPorCurso(Vector<Seccion> listEs, Vector<Seccion> listAux) {
          cargarSecciones();
      listAux.removeAllElements();
        String busqueda = String.valueOf(txtBusqueda.getText());

        for (Seccion secc: listEs) {

            if(secc.getCurso().getNombre().contains(busqueda)
                    || busqueda.equals(secc.getCurso().getNombre())){
                  listAux.add(secc);
            }

        }

        this.cargarTabla(listAux);

    }

    public void busquedaPorAsesor(Vector<Seccion> listEs, Vector<Seccion> listAux) {
          cargarSecciones();
      listAux.removeAllElements();
        String busqueda = String.valueOf(txtBusqueda.getText());

        for (Seccion secc : listEs) {

            if (busqueda.equals(secc.getAsesor().getNombre())
                    || secc.getAsesor().getNombre().contains(busqueda)) {
                listAux.add(secc);
            }

        }
   
        this.cargarTabla(listAux);

    }

    public void busquedaPorEstado(Vector<Seccion> listEs, Vector<Seccion> listAux) {
          cargarSecciones();
        listAux.removeAllElements();
        String busqueda = String.valueOf(txtBusqueda.getText());

        for (Seccion secc : listEs) {

            if (busqueda.equals(secc.getEstado().getNombre())
                    || secc.getEstado().getNombre().contains(busqueda)) {
                listAux.add(secc);
            }

        }
        this.cargarTabla(listAux);

    }

    
 }
