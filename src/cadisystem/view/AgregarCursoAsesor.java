/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadisystem.view;

import cadisystem.dto.asesor.Asesor;
import cadisystem.dto.asesor.AsesorCurso;
import cadisystem.dto.curso.Curso;
import cadisystem.herramientas.Tools;
import cadisystem.model.DAO.AsesorCursoDAO;
import cadisystem.model.DAO.AsesorDAO;
import cadisystem.model.DAO.CursoDAO;
import cadisystem.model.implement.AsesorCursoImp;
import cadisystem.model.implement.AsesorImp;
import cadisystem.model.implement.CursoImp;
import java.awt.event.ItemEvent;
import java.util.List;
import java.util.Objects;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlos
 */
public class AgregarCursoAsesor extends javax.swing.JDialog {

    Asesor asesor = new Asesor();
    Vector<AsesorCurso> LAsesorCursos = new Vector();
    Vector<AsesorCurso> LAsesorCursoAgregar = new Vector();
    Vector<AsesorCurso> LAsesorCursoEliminar = new Vector();
    Tools tools = new Tools();

    /**
     * Creates new form AgregarCursoAsesor
     */
    public AgregarCursoAsesor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tools.validarMaximoCaracteresTextfield(txtBusqueda, 11);
        cmbCursos.setVisible(false);
        btnAgrCurso.setVisible(false);
        btnGuardar.setVisible(false);
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblBusqueda = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableAsesor = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnAgrCurso = new javax.swing.JButton();
        lblAsesor = new javax.swing.JLabel();
        cmbCursos = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo-cadif1.jpg"))); // NOI18N
        jLabel1.setText("     Agregar cursos a Asesores");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(19, 19, 19))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, -1));

        lblBusqueda.setText("Cédula del Asesor:");
        getContentPane().add(lblBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 120, 20));

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });
        getContentPane().add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 211, 20));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, -1, -1));

        jtableAsesor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cursos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtableAsesor);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 420, 230));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 490, 80, -1));

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 490, 90, -1));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 490, 90, -1));

        btnAgrCurso.setText("Agregar curso");
        btnAgrCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgrCursoActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgrCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, 120, -1));
        getContentPane().add(lblAsesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 270, 30));

        cmbCursos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCursos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCursosItemStateChanged(evt);
            }
        });
        cmbCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCursosActionPerformed(evt);
            }
        });
        getContentPane().add(cmbCursos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 280, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtBusqueda.getText().equals("")) {
            String msj = "Introduzca la cédula del asesor";
            JOptionPane.showMessageDialog(null, msj, "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            AsesorDAO asesordao = new AsesorImp();
            try {
                asesor = asesordao.buscar(txtBusqueda.getText(), asesor);
                if (asesor.getId() == -1) {

                    String msj = "Asesor no encontrado";
                    JOptionPane.showMessageDialog(null, msj, "Información", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    lblAsesor.setText("" + asesor.getNombre() + " " + asesor.getApellido());
                    btnAgrCurso.setVisible(true);
                    cmbCursos.setVisible(true);
                }

            } catch (Exception ex) {
                Logger.getLogger(AgregarCursoAsesor.class.getName()).log(Level.SEVERE, null, ex);
            }

            AsesorCursoDAO asec = new AsesorCursoImp();
            try {
                LAsesorCursos = asec.listadoCursosDaoIdAsesor(asesor.getId());
                cargarTabla(LAsesorCursos);
                } catch (Exception ex) {
                Logger.getLogger(AgregarCursoAsesor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped

        tools.validarSoloNumeros(evt);


    }//GEN-LAST:event_txtBusquedaKeyTyped

    public void cargarCombo() {
        CursoDAO cursodao = new CursoImp();
        try {
            cursodao.cargarComboCurso(this.cmbCursos);
        } catch (Exception ex) {
            Logger.getLogger(AgregarCursoAsesor.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void cargarTabla(Vector<AsesorCurso> LCurso) {

        if (!LCurso.isEmpty()) {

            jtableAsesor.removeAll();
            DefaultTableModel m = (DefaultTableModel) jtableAsesor.getModel();
            m.setNumRows(0);

            for (int i = 0; i < LCurso.size(); i++) {
                Vector fila = new Vector();
                fila.add(LCurso.get(i).getCurso());
                m.addRow(fila);
            }

        }

    }
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtBusqueda.setText("");
        lblAsesor.setText("");
        jtableAsesor.removeAll();
        cmbCursos.setSelectedIndex(0);
        btnAgrCurso.setVisible(false);
        cmbCursos.setVisible(false);
        LAsesorCursos.clear();
        LAsesorCursoAgregar.clear();
        LAsesorCursoEliminar.clear();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnAgrCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgrCursoActionPerformed
         Curso curso = (Curso) cmbCursos.getSelectedItem();
        AsesorCurso asec = new AsesorCurso();
        asec.setIdCurso(curso.getId());
        asec.setCurso(curso.getNombre());
        asec.setIdAsesor(asesor.getId());
        if (curso.getNombre().equals("Seleccione")) {
            String msj = "Seleccione un curso";
            JOptionPane.showMessageDialog(null, msj, "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            LAsesorCursos.add(asec);
            LAsesorCursoAgregar.add(asec);
            cargarTabla(LAsesorCursos);
            cmbCursos.removeItem(curso);
            cmbCursos.setSelectedIndex(0);
            btnGuardar.setVisible(true);

        }
    }//GEN-LAST:event_btnAgrCursoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        String msj = "¿Está seguro(a) de cancelar la asignación de cursos?";
        if (JOptionPane.showConfirmDialog(null, msj, "Error", JOptionPane.ERROR_MESSAGE) == 0) {

            this.dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (LAsesorCursoAgregar.isEmpty()) {
            String msj = "Agregue al menos un curso a la lista";
            JOptionPane.showMessageDialog(null, msj, "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            AsesorCursoDAO asecdao = new AsesorCursoImp();
            Integer contador = 0;
            for (AsesorCurso asec : LAsesorCursoAgregar) {

                try {
                    asecdao.insertar(asec);
                    contador++;

                } catch (Exception ex) {
                    Logger.getLogger(AgregarCursoAsesor.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            if (contador == LAsesorCursoAgregar.size()) {
                String msj = "Ha asociado los cursos al asesor " + asesor.getNombre() + " " + asesor.getApellido();
                JOptionPane.showMessageDialog(null, msj, "Información", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }

        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void cmbCursosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCursosItemStateChanged

    }//GEN-LAST:event_cmbCursosItemStateChanged

    private void cmbCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCursosActionPerformed
          eliminarItemCargadosEnTabla();
    }//GEN-LAST:event_cmbCursosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarCursoAsesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarCursoAsesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarCursoAsesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarCursoAsesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AgregarCursoAsesor dialog = new AgregarCursoAsesor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgrCurso;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox cmbCursos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtableAsesor;
    private javax.swing.JLabel lblAsesor;
    private javax.swing.JLabel lblBusqueda;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
public void eliminarItemCargadosEnTabla() {
        Curso curso = new Curso();

        Curso cur = new Curso();
        cur = (Curso) cmbCursos.getSelectedItem();
        for (int i = 0; i < LAsesorCursos.size(); i++) {

            curso.setId(LAsesorCursos.get(i).getIdCurso());
            curso.setNombre(LAsesorCursos.get(i).getCurso());
            if (curso.getNombre().equals(cur.getNombre())) {

                String msj = " El curso seleccionado ya esta en la lista";
                JOptionPane.showMessageDialog(null, msj, "Error", JOptionPane.ERROR_MESSAGE);
                cmbCursos.setSelectedIndex(0);
            }

        }

    }

}
